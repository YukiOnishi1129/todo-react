{"version":3,"sources":["components/AddTodo.jsx","components/SearchTodo.jsx","components/Todo.jsx","components/TodoList.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["AddTodo","className","type","placeholder","value","this","props","onChange","onKeyDown","handleAdd","Component","SearchTodo","onKeyUp","handleSearch","Todo","state","text","title","handleChangeText","bind","handleClickUpdate","handleClickEditFlg","handleClickDelete","e","setState","target","keyCode","onChangeTitle","id","onChangeFlg","window","confirm","onRemove","editForm","editFlg","onClick","TodoList","handleChangeTitle","handleChangeFlg","handleRemove","handleUpdate","changeEditFlg","handleDelete","todolist","todos","map","todo","key","App","uniqueId","inputValue","searchKeyWord","searchResult","console","log","concat","regexp","RegExp","match","targetId","editIndex","findIndex","nextTodos","deleteIndex","splice","filter","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.76c91ebf.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass AddTodo extends Component {\n  render() {\n    return (\n      <section className=\"common-area\">\n        <h2 className=\"add-title\">ADD TASK</h2>\n        <input\n          type=\"text\"\n          placeholder=\"New Task\"\n          value={this.props.value}\n          onChange={this.props.onChange}\n          onKeyDown={this.props.handleAdd}\n        />\n      </section>\n    );\n  }\n}\n\nexport default AddTodo;\n","import React, { Component } from 'react';\n\nexport default class SearchTodo extends Component {\n  render() {\n    return (\n      <section className=\"common-area\">\n        <input\n          type=\"text\"\n          placeholder=\"Search Keyword\"\n          onKeyUp={this.props.handleSearch}\n        />\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: this.props.title, // todoの内容は親から渡ってきたtitleを表示\n    };\n    // thisをbind\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleClickUpdate = this.handleClickUpdate.bind(this);\n    this.handleClickEditFlg = this.handleClickEditFlg.bind(this);\n    this.handleClickDelete = this.handleClickDelete.bind(this);\n  }\n\n  // todoの内容が変更されたら、todoに表記するtextを変更\n  // ※親のtodoのtitleの値はここでは変更していないことに注意\n  handleChangeText(e) {\n    this.setState({\n      text: e.target.value,\n    });\n  }\n\n  // 親コンポーネントから渡されたメソッドを自分のメソッド内で実行する\n  // 親コンポーネントのtodo更新処理を実施\n  handleClickUpdate(e) {\n    // エンターキーが押された際にtodoを更新\n    if (e.keyCode === 13) {\n      this.props.onChangeTitle(this.props.id, e);\n    }\n  }\n  // 親コンポーネントのtodoのeditFlgをtrueにする(todoを編集モードにする)\n  handleClickEditFlg() {\n    this.props.onChangeFlg(this.props.id);\n  }\n  // 親コンポーネントのtodo削除処理を実施\n  handleClickDelete() {\n    if (window.confirm('todoを削除してもいいですか？')) {\n      this.props.onRemove(this.props.id);\n    }\n  }\n\n  render() {\n    // editFlgにて読み取りモードと編集モードに切り替える\n    const editForm = this.props.editFlg ? (\n      <input\n        type=\"text\"\n        className=\"editForm\"\n        value={this.state.text}\n        onChange={this.handleChangeText}\n        onKeyUp={this.handleClickUpdate}\n      />\n    ) : (\n      <span className=\"todo-task\" onClick={this.handleClickEditFlg}>\n        {this.state.text}\n      </span>\n    );\n    return (\n      <li className=\"todo\">\n        {editForm}\n        <i\n          className=\"far fa-trash-alt delete fa-lg\"\n          onClick={this.handleClickDelete}\n        ></i>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Todo from './Todo';\n\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n    // thisをbind\n    this.handleChangeTitle = this.handleChangeTitle.bind(this);\n    this.handleChangeFlg = this.handleChangeFlg.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  // 親コンポーネントから渡されたメソッドを自分のメソッド内で実行する\n  // (この自分のコンポーネントを子供のTodoコンポーネントへ渡す)\n  // 親コンポーネントのtodo更新処理を実施\n  handleChangeTitle(id, e) {\n    this.props.handleUpdate(id, e);\n  }\n  // 親コンポーネントのtodoのeditFlgをtrueにする(todoを編集モードにする)\n  handleChangeFlg(id) {\n    this.props.changeEditFlg(id);\n  }\n  // 親コンポーネントのtodo削除処理を実施\n  handleRemove(id) {\n    this.props.handleDelete(id);\n  }\n\n  render() {\n    // forループで記載する場合(処理が冗長になる)\n    // const todolist = [];\n    // for (let i = 0; i < this.props.todos.length; i++) {\n    //   todolist.push(\n    //     <Todo\n    //       key={this.props.todos[i].id}\n    //       id={this.props.todos[i].id}\n    //       title={this.props.todos[i].title}\n    //       onRemove={this.handleRemove}\n    //     />\n    //   );\n    // }\n\n    // map関数で実施した場合(こっちがシンプルに書ける)\n    const todolist = this.props.todos.map((todo) => {\n      return (\n        <Todo\n          key={todo.id}\n          {...todo}\n          onChangeTitle={this.handleChangeTitle}\n          onChangeFlg={this.handleChangeFlg}\n          onRemove={this.handleRemove}\n        />\n      );\n    });\n\n    return (\n      <section className=\"common-area\">\n        <ul className=\"todolist\">{todolist}</ul>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AddTodo from './components/AddTodo';\nimport SearchTodo from './components/SearchTodo';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [\n        {\n          id: 1,\n          title: 'Task1',\n          editFlg: false,\n        },\n        {\n          id: 2,\n          title: 'Task2',\n          editFlg: false,\n        },\n      ],\n      uniqueId: 2, // todoが初期値で2つあるため、todo追加した際のidの採番を3から開始する\n      inputValue: '', // todo追加フォームの入力値(初期値は空文字)\n      searchKeyWord: '', //検索キーワード\n    };\n    // メソッドにthisをbind\n    // (関数を入れ子にすると、thisの値が変わってしまう)\n    // (アロー関数で記載するならば、constructorでのthisのbindの記載は不要)\n    this.handleAdd = this.handleAdd.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.searchResult = this.searchResult.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.changeEditFlg = this.changeEditFlg.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  // ライフサイクルメソッド\n\n  // componentWillMountは非推奨\n  // componentWillMount() {\n  //   console.log('componentWillMount');\n  // }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n\n  // todo追加処理\n  handleAdd(e) {\n    // エンターキーが押された際にtodoを追加\n    if (e.keyCode === 13 && e.target.value !== '') {\n      this.setState({\n        todos: this.state.todos.concat({\n          id: this.state.uniqueId + 1,\n          title: e.target.value,\n          editFlg: false,\n        }),\n        // 次にtodo追加する際にidが重複するため、インクリメントする\n        uniqueId: this.state.uniqueId + 1,\n      });\n      // todo追加後、フォームの値をリセットする\n      this.setState({ inputValue: '' });\n    }\n  }\n\n  // todo追加フォームの値を表示するため、inputValueを更新する\n  onChange(e) {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  }\n\n  // todo検索機能\n  handleSearch(e) {\n    this.setState({\n      searchKeyWord: e.target.value,\n    });\n  }\n\n  // 正規表現にマッチしたtodoのみ返却する\n  searchResult(todo) {\n    const regexp = new RegExp('^' + this.state.searchKeyWord, 'i');\n    return todo.title.match(regexp);\n  }\n\n  // todo更新機能\n  handleUpdate(targetId, e) {\n    // 更新するtodoのidの配列番号を取得\n    const editIndex = this.state.todos.findIndex(\n      (todo) => todo.id === targetId\n    );\n    const nextTodos = this.state.todos;\n    nextTodos[editIndex].title = e.target.value;\n    nextTodos[editIndex].editFlg = false;\n    this.setState({\n      todos: nextTodos,\n    });\n  }\n\n  // 編集モード変更\n  changeEditFlg(targetId) {\n    // 更新するtodoのidの配列番号を取得\n    const editIndex = this.state.todos.findIndex(\n      (todo) => todo.id === targetId\n    );\n    const nextTodos = this.state.todos;\n    nextTodos[editIndex].editFlg = true;\n    this.setState({\n      todos: nextTodos,\n    });\n  }\n\n  // todo削除機能\n  handleDelete(targetId) {\n    // 削除するtodoのidの配列番号を取得\n    const deleteIndex = this.state.todos.findIndex(\n      (todo) => todo.id === targetId\n    );\n    this.state.todos.splice(deleteIndex, 1);\n    this.setState({\n      todos: this.state.todos,\n    });\n  }\n\n  render() {\n    // SearchTodoコンポーネントから渡された検索キーワードを元に検索して絞り込む\n    const todos = this.state.searchKeyWord\n      ? this.state.todos.filter(this.searchResult)\n      : this.state.todos;\n    return (\n      <div className=\"wrapper\">\n        <h1 className=\"title\">Todo List</h1>\n        <AddTodo\n          value={this.state.inputValue}\n          handleAdd={this.handleAdd}\n          onChange={this.onChange}\n        />\n        <SearchTodo handleSearch={this.handleSearch} />\n        <TodoList\n          todos={todos}\n          handleUpdate={this.handleUpdate}\n          changeEditFlg={this.changeEditFlg}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}